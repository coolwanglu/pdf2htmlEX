var pdf2htmlEX = window.pdf2htmlEX;
function get(id){
    return document.getElementById(id);
}
function isFullScreen(){
  return document.fullscreen ||
                 document.mozFullScreen ||
                 document.webkitIsFullScreen ||
                 false;
}
function hasClass(element, cls) {
  return (' ' + element.className + ' ').indexOf(' ' + cls + ' ') > -1;
}
function enableBtn(id){
  get(id).disabled = false;
}
function disableBtn(id){
  get(id).disabled = true;
}
function addClass(element, cls){
  if (!hasClass(element, cls)){
    element.className = element.className + ' ' + cls;
  }
}
function removeClass(element, cls) {
  element.className = element.className.replace(new RegExp('(?:^|\\s)'+cls+'(?!\\S)'), '');
}
function getPage(seq, pages){
  for (var i=0; i<pages.length; i++) {
    if (i === seq-1){
      return pages[i];
    }
  }
}
function updateOutLine(page_id){
  var page = getPage(page_id, pdf2htmlEX.defaultViewer.pages);
  if (page){
    var elements = document.querySelectorAll('#outline a[data-dest-detail]');
    for (var i=0; i<elements.length; i++){
      removeClass(elements[i], 'sbl_active');
    }
    var elements = document.querySelectorAll('#outline a[href="#' + page.page.id + '"]');
    for (var i=0; i<elements.length; i++){
      addClass(elements[i], 'sbl_active');
    }
  }
}
function jumpToPage(p){
  p = parseInt(p);
  if (isNaN(p) || p < 1 || p > pdf2htmlEX.defaultViewer.pages.length){
    //pass
  }else{
    if (p !== pdf2htmlEX.defaultViewer.cur_page_idx + 1){
      pdf2htmlEX.defaultViewer.scroll_to(p-1);
      return true;
    }
  }
  return false;
}
function togglePresentationModeIconState(){
  var presentationMode = get('presentationMode');
  if (isFullScreen()){
    addClass(presentationMode, 'active');
  }else {
    removeClass(presentationMode, 'active');
  }
}

document.addEventListener('DOMContentLoaded', function() {
  var pageNumber = get('pageNumber');
  // set/enable/disable navbar pages
  pdf2htmlEX.defaultViewer.init_after_loading_content();
  pdf2htmlEX.defaultViewer.update_page_idx();
  var pages = pdf2htmlEX.defaultViewer.pages;
  var pages_length = pages.length;
  var cur_page_idx = pdf2htmlEX.defaultViewer.cur_page_idx + 1;
  if (pages_length > 0){
    pageNumber.max = pages_length;
    get('numPages').innerHTML = 'of ' + pages_length;
    if (pages_length === 1){
      disableBtn('next');
    }
  }
  else {
    disableBtn('next');
  }
  
  //if user directly lands on e.g. 6th page update showing page counter instead of default `1`
  if (cur_page_idx > 1){
    pageNumber.value = cur_page_idx;
    updateOutLine(cur_page_idx);
  }else{
    updateOutLine(1);
  }
  
  //if user scroll update current page number in navbar
  get(pdf2htmlEX.defaultViewer.config['container_id']).addEventListener('scroll', function(){
     if (pdf2htmlEX.defaultViewer.cur_page_idx + 1 !== cur_page_idx){
      cur_page_idx = pdf2htmlEX.defaultViewer.cur_page_idx + 1;
      pageNumber.value = cur_page_idx;
      updateOutLine(cur_page_idx);
      if (cur_page_idx > 0){
        if (cur_page_idx === 1){
          if (cur_page_idx !== pages_length){
            enableBtn('next');
            disableBtn('previous');
          }else{
            disableBtn('next');
            disableBtn('previous');
          }
        }else if (cur_page_idx > 1 && cur_page_idx < pages_length){
          enableBtn('next');
          enableBtn('previous');
        }else {
          disableBtn('next');
          enableBtn('previous');
        }
      }
    }
  }, false);
  
  //if user jump on page by changing paging number, show page
  pageNumber.addEventListener('change', function(){
    var ok = jumpToPage(pageNumber.value);
    if (ok === false){
      pageNumber.value = cur_page_idx;
    }
  }, false);
    
  pageNumber.addEventListener('keyup', function(e){
    var keyCode = e.keyCode || e.which;
    if (keyCode == 13) {
      var ok = jumpToPage(pageNumber.value);
      if (ok === false){
        pageNumber.value = cur_page_idx;
      }
    }
  }, false);
    
  get('next').addEventListener('click', function() {
    jumpToPage(parseInt(pageNumber.value) + 1);
  }, false);
  get('previous').addEventListener('click', function() {
    jumpToPage(parseInt(pageNumber.value) - 1);
  }, false);
  get('zoomOut').addEventListener('click', function() {
    pdf2htmlEX.defaultViewer.rescale(pdf2htmlEX.defaultViewer.config['scale_step'], true);
  }, false);
  get('zoomIn').addEventListener('click', function() {
    pdf2htmlEX.defaultViewer.rescale(1.0 / pdf2htmlEX.defaultViewer.config['scale_step'], true);
  }, false);
  
  var sidebarToggle = get('sidebarToggle');
  var sidebar = get('sidebar');
  sidebarToggle.addEventListener('click', function() {
    if (!hasClass(sidebarToggle, 'active')) {
      removeClass(sidebar, 'hide');
      addClass(sidebar, 'show');
      addClass(sidebar, 'opened');
      addClass(sidebarToggle, 'active');
    }
    else {
      removeClass(sidebar, 'show');
      removeClass(sidebar, 'opened');
      addClass(sidebar, 'hide');
      removeClass(sidebarToggle, 'active');
    }
  }, false);
  
  var presentationMode = get('presentationMode');
  presentationMode.addEventListener('click', function() {
    if (!document.fullscreenElement &&  // alternative standard method
      !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement ) {  // current working methods
      if (document.documentElement.requestFullscreen) {
        document.documentElement.requestFullscreen();  
      } else if (document.documentElement.msRequestFullscreen) {
        document.documentElement.msRequestFullscreen();
      } else if (document.documentElement.mozRequestFullScreen) {
        document.documentElement.mozRequestFullScreen();
      } else if (document.documentElement.webkitRequestFullscreen) {
        document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
      }
    } else {
      if (document.exitFullscreen) {
        document.exitFullscreen();
      } else if (document.msExitFullscreen) {
        document.msExitFullscreen();
      } else if (document.mozCancelFullScreen) {
        document.mozCancelFullScreen();
      } else if (document.webkitExitFullscreen) {
        document.webkitExitFullscreen();
      }
    }
    togglePresentationModeIconState();
  }, false);
  
  document.addEventListener('webkitfullscreenchange', function(){
    togglePresentationModeIconState();
  }, false);
  document.addEventListener('mozfullscreenchange', function(){
    togglePresentationModeIconState();
  }, false);
  document.addEventListener('fullscreenchange', function(){
    togglePresentationModeIconState();
  }, false);
  document.addEventListener('MSFullscreenChange', function(){
    togglePresentationModeIconState();
  }, false);
}, false);